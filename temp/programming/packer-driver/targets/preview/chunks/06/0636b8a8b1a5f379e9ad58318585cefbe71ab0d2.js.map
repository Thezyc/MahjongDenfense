{"version":3,"sources":["file:///C:/Users/Administrator/MahjongDenfense/assets/scripts/MahjongTile.ts"],"names":["_decorator","Component","Vec3","log","Input","find","ccclass","property","MahjongTile","originalPosition","isDragging","gridNodes","gameManager","draggedTile","onLoad","set","node","position","on","EventType","MOUSE_DOWN","onMouseDown","MOUSE_MOVE","onMouseMove","MOUSE_UP","onMouseUp","gridsNode","children","length","onDestroy","off","event","tile","target","getWorldPosition","toString","worldPos","getUILocation","setWorldPosition","x","y","targetPos","targetGridNode","setGameManager","setGridNodes"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, log, EventMouse, Input, UITransform, find, Vec2 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MahjongTile')\r\nexport class MahjongTile extends Component {\r\n    public originalPosition: Vec3 = new Vec3();\r\n    private isDragging: boolean = false;\r\n    private gridNodes: Node[] = [];\r\n    private gameManager: Node = null;\r\n    private draggedTile: Node | null = null;\r\n\r\n    onLoad() {\r\n        this.originalPosition.set(this.node.position);\r\n\r\n        this.node.on(Input.EventType.MOUSE_DOWN, this.onMouseDown, this);\r\n        this.node.on(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\r\n        this.node.on(Input.EventType.MOUSE_UP, this.onMouseUp, this);\r\n\r\n        const gridsNode = find('Canvas/Grids');\r\n        if (gridsNode) {\r\n            this.gridNodes = gridsNode.children;\r\n            log(`Found ${this.gridNodes.length} grids`);\r\n        } else {\r\n            log('Grids node not found');\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        this.node.off(Input.EventType.MOUSE_DOWN, this.onMouseDown, this);\r\n        this.node.off(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\r\n        this.node.off(Input.EventType.MOUSE_UP, this.onMouseUp, this);\r\n    }\r\n\r\n    onMouseDown(event: EventMouse) {\r\n        const tile = event.target as Node;\r\n        if (tile) {\r\n            this.draggedTile = tile;\r\n            this.originalPosition.set(tile.getWorldPosition()); // 记录麻将的初始世界位置\r\n            this.isDragging = true;\r\n\r\n            log(`选中麻将位置: ${this.originalPosition.toString()}`);\r\n        }\r\n    }\r\n\r\n    onMouseMove(event: EventMouse) {\r\n        if (this.isDragging && this.draggedTile) {\r\n            const worldPos = event.getUILocation();\r\n            this.draggedTile.setWorldPosition(new Vec3(worldPos.x, worldPos.y, 0));\r\n\r\n            // log(`MahjongTile onMouseMove: Dragging Position: ${this.draggedTile.getWorldPosition().toString()}`);\r\n        }\r\n    }\r\n\r\n    onMouseUp(event: EventMouse) {\r\n        if (!this.draggedTile) return;\r\n\r\n        const targetPos = event.getUILocation();\r\n        let targetGridNode: Node | null = null;\r\n\r\n        // 判断鼠标释放位置的情况，有格子则放入，无格子则返回原点\r\n        \r\n        if (targetGridNode) {\r\n            \r\n        }\r\n\r\n        this.isDragging = false;\r\n        this.draggedTile = null;\r\n    }\r\n\r\n    setGameManager(gameManager: Node) {\r\n        this.gameManager = gameManager;\r\n    }\r\n\r\n    setGridNodes(gridNodes: Node[]) {\r\n        this.gridNodes = gridNodes;\r\n    }\r\n}"]}