{"version":3,"sources":["file:///C:/Users/Administrator/MahjongDenfense/assets/scripts/MahjongTile.ts"],"names":["_decorator","Component","Vec3","log","Input","UITransform","find","Vec2","ccclass","property","MahjongTile","originalPosition","isDragging","gridNodes","gameManager","draggedTile","onLoad","set","node","position","on","EventType","MOUSE_DOWN","onMouseDown","MOUSE_MOVE","onMouseMove","MOUSE_UP","onMouseUp","gridsNode","children","length","onDestroy","off","event","tile","target","getWorldPosition","toString","worldPos","getUILocation","setWorldPosition","x","y","targetPos","targetGridNode","gridNode","gridTransform","getComponent","name","getBoundingBoxToWorld","boundingBox","contains","gridNodeMap","has","targetTile","get","tempPosition","clone","parent","delete","setGameManager","setGridNodes"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, log, EventMouse, Input, UITransform, find, Vec2 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MahjongTile')\r\nexport class MahjongTile extends Component {\r\n    public originalPosition: Vec3 = new Vec3();\r\n    private isDragging: boolean = false;\r\n    private gridNodes: Node[] = [];\r\n    private gameManager: Node = null;\r\n    private draggedTile: Node | null = null;\r\n\r\n    onLoad() {\r\n        this.originalPosition.set(this.node.position);\r\n\r\n        this.node.on(Input.EventType.MOUSE_DOWN, this.onMouseDown, this);\r\n        this.node.on(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\r\n        this.node.on(Input.EventType.MOUSE_UP, this.onMouseUp, this);\r\n\r\n        const gridsNode = find('Canvas/Grids');\r\n        if (gridsNode) {\r\n            this.gridNodes = gridsNode.children;\r\n            log(`Found ${this.gridNodes.length} grids`);\r\n        } else {\r\n            log('Grids node not found');\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        this.node.off(Input.EventType.MOUSE_DOWN, this.onMouseDown, this);\r\n        this.node.off(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\r\n        this.node.off(Input.EventType.MOUSE_UP, this.onMouseUp, this);\r\n    }\r\n\r\n    onMouseDown(event: EventMouse) {\r\n        const tile = event.target as Node;\r\n        if (tile) {\r\n            this.draggedTile = tile;\r\n            this.originalPosition.set(tile.getWorldPosition()); // 记录麻将的初始世界位置\r\n            this.isDragging = true;\r\n\r\n            log(`选中麻将位置: ${this.originalPosition.toString()}`);\r\n        }\r\n    }\r\n\r\n    onMouseMove(event: EventMouse) {\r\n        if (this.isDragging && this.draggedTile) {\r\n            const worldPos = event.getUILocation();\r\n            this.draggedTile.setWorldPosition(new Vec3(worldPos.x, worldPos.y, 0));\r\n\r\n            // log(`MahjongTile onMouseMove: Dragging Position: ${this.draggedTile.getWorldPosition().toString()}`);\r\n        }\r\n    }\r\n\r\n    onMouseUp(event: EventMouse) {\r\n        if (!this.draggedTile) return;\r\n\r\n        const targetPos = event.getUILocation();\r\n        let targetGridNode: Node | null = null;\r\n\r\n        // 查找鼠标释放位置所在的格子\r\n        for (const gridNode of this.gridNodes) {\r\n            const gridTransform = gridNode.getComponent(UITransform);\r\n            log(gridNode.name + '包围盒: ' + gridTransform.getBoundingBoxToWorld().toString());\r\n            if (gridTransform) {\r\n                const boundingBox = gridTransform.getBoundingBoxToWorld();\r\n                if (boundingBox.contains(new Vec2(targetPos.x, targetPos.y))) {\r\n                    targetGridNode = gridNode;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (targetGridNode) {\r\n            const gameManager = this.gameManager.getComponent('GameManager') as any;\r\n            const gridNodeMap = gameManager.gridNodeMap;\r\n            log(`麻将释放位置: ${targetGridNode.name}`);\r\n            if (gridNodeMap.has(targetGridNode)) {\r\n                const targetTile = gridNodeMap.get(targetGridNode);\r\n\r\n                if (targetTile === this.draggedTile) {\r\n                    log('麻将释放: Same tile selected, no swap performed.');\r\n                    this.draggedTile.setWorldPosition(this.originalPosition);\r\n                } else {\r\n                    const tempPosition = targetTile.getWorldPosition().clone();\r\n                    targetTile.setWorldPosition(this.draggedTile.getWorldPosition());\r\n                    this.draggedTile.setWorldPosition(tempPosition);\r\n\r\n                    gridNodeMap.set(targetGridNode, this.draggedTile);\r\n                    gridNodeMap.set(this.node.parent, targetTile);\r\n\r\n                    log(`麻将释放，交换格子: Swapped with tile at grid ${targetGridNode.name}`);\r\n                }\r\n            } else {\r\n                this.draggedTile.setWorldPosition(targetGridNode.getWorldPosition());\r\n\r\n                gridNodeMap.delete(this.node.parent);\r\n                gridNodeMap.set(targetGridNode, this.draggedTile);\r\n\r\n                log(`MahjongTile onMouseUp: Moved to empty grid ${targetGridNode.name}`);\r\n            }\r\n        } else {\r\n            this.draggedTile.setWorldPosition(this.originalPosition);\r\n            log(`MahjongTile onMouseUp: Returned to original position: ${this.originalPosition.toString()}`);\r\n        }\r\n\r\n        this.isDragging = false;\r\n        this.draggedTile = null;\r\n    }\r\n\r\n    setGameManager(gameManager: Node) {\r\n        this.gameManager = gameManager;\r\n    }\r\n\r\n    setGridNodes(gridNodes: Node[]) {\r\n        this.gridNodes = gridNodes;\r\n    }\r\n}"]}