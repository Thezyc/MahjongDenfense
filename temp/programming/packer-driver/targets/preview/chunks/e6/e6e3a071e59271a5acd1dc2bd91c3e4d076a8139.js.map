{"version":3,"sources":["file:///C:/Users/Administrator/MiaoMiaoMaJiang/assets/scripts/GridManager.ts"],"names":["_decorator","Component","Prefab","ccclass","property","GridManager","gridNodes","onLoad","createGrid","getGridNodes"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAuBC,MAAAA,M,OAAAA,M;;;;;;;;;OACtC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;6BAGjBK,W,WADZF,OAAO,CAAC,aAAD,C,UAEHC,QAAQ,CAACF,MAAD,C,2BAFb,MACaG,WADb,SACiCJ,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA,eAI/BK,SAJ+B,GAIX,EAJW;AAAA;;AAMvCC,QAAAA,MAAM,GAAG;AACL,eAAKC,UAAL;AACH,SARsC,CAUvC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,QAAAA,YAAY,GAAG;AACX,iBAAO,KAAKH,SAAZ;AACH;;AAxCsC,O;;;;;iBAElB,I","sourcesContent":["import { _decorator, Component, Node, Vec3, Prefab, instantiate, UITransform } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GridManager')\r\nexport class GridManager extends Component {\r\n    @property(Prefab)\r\n    gridPrefab: Prefab = null;\r\n\r\n    private gridNodes: Node[] = [];\r\n\r\n    onLoad() {\r\n        this.createGrid();\r\n    }\r\n\r\n    // createGrid() {\r\n    //     const gridSize = 120; // 每个格子的大小\r\n    //     const leftGridCount = 9; // 左侧3x3的格子数量\r\n    //     const rightGridCount = 6; // 右侧2x3的格子数量\r\n\r\n    //     // 创建左侧3x3格子\r\n    //     // for (let i = 0; i < leftGridCount; i++) {\r\n    //     //     const gridNode = instantiate(this.gridPrefab);\r\n    //     //     gridNode.setParent(this.node);\r\n    //     //     const row = Math.floor(i / 3);\r\n    //     //     const col = i % 3;\r\n    //     //     gridNode.setPosition(new Vec3(col * gridSize - 500, -row * gridSize + 200, 0));\r\n    //     //     gridNode.setSiblingIndex(0); // 设置格子的显示层级低于麻将\r\n    //     //     this.gridNodes.push(gridNode);\r\n    //     // }\r\n\r\n    //     // 创建右侧2x3格子\r\n    //     // for (let i = 0; i < rightGridCount; i++) {\r\n    //     //     const gridNode = instantiate(this.gridPrefab);\r\n    //     //     gridNode.setParent(this.node);\r\n    //     //     const row = Math.floor(i / 2);\r\n    //     //     const col = i % 2;\r\n    //     //     gridNode.setPosition(new Vec3(col * gridSize - 200, -row * gridSize + 200, 0));\r\n    //     //     gridNode.setSiblingIndex(0); // 设置格子的显示层级低于麻将\r\n    //     //     this.gridNodes.push(gridNode);\r\n    //     // }\r\n    // }\r\n\r\n    getGridNodes() {\r\n        return this.gridNodes;\r\n    }\r\n}"]}