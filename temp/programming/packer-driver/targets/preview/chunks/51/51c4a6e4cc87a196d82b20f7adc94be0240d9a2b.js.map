{"version":3,"sources":["file:///C:/Users/Administrator/MahjongDenfense/assets/scripts/DeckManager.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","log","Vec3","TileManager","ccclass","property","DeckManager","deck","drawnTile","types","numbers","wan","tong","tiao","feng","jian","totalTiles","start","initializeDeck","forEach","type","num","i","tile","mahjongTilePrefab","setParent","deckNode","position","tileManager","getComponent","initializeTile","push","drawTile","length","randomIndex","Math","floor","random","splice","createDrawnTile","drawArea","addDragFeature","on","EventType","TOUCH_MOVE","onTileDrag","TOUCH_END","onTileDrop","TOUCH_CANCEL","event","delta","getDelta","setPosition","add","gridManager","node","grid","getGridAtPoint"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, resources, SpriteFrame, log, Sprite, Vec3 } from 'cc';\r\nimport { TileManager } from './TileManager'; // 导入TileManager类\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('DeckManager')\r\nexport class DeckManager extends Component {\r\n    @property(Prefab) private mahjongTilePrefab: Prefab = null; // MahjongTile的Prefab\r\n    @property(Node) private deckNode: Node = null; // 牌堆所在的节点\r\n    @property(Node) private drawArea: Node = null; // 抽牌区\r\n    private deck: Node[] = []; // 存放所有麻将牌的节点数组\r\n    private drawnTile: Node = null; // 当前抽取的麻将牌\r\n\r\n    private types: string[] = ['wan', 'tong', 'tiao', 'feng', 'jian']; // 麻将牌的类型\r\n    private numbers: { [key: string]: number[] } = {\r\n        wan: [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n        tong: [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n        tiao: [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n        feng: [1, 2, 3, 4],\r\n        jian: [1, 2, 3]\r\n    }; // 每种牌的编号\r\n    private totalTiles: Node[] = []; // 存储所有136张麻将牌\r\n\r\n    start() {\r\n        this.initializeDeck(); // 初始化牌堆\r\n    }\r\n\r\n    // 初始化牌堆，加载并创建136张麻将牌\r\n    private initializeDeck() {\r\n        // 遍历每种类型和对应的编号来生成牌\r\n        this.types.forEach(type => {\r\n            this.numbers[type].forEach(num => {\r\n                for (let i = 0; i < 4; i++) { // 每种牌有4张\r\n                    const tile = instantiate(this.mahjongTilePrefab);\r\n                    tile.setParent(this.deckNode); // 将麻将牌添加到牌堆节点\r\n                    tile.position = new Vec3(0, 0, 0); // 设置位置，调整为合适的位置（视场景而定）\r\n\r\n                    // 使用 TileManager 组件类来初始化麻将牌\r\n                    const tileManager = tile.getComponent(TileManager);\r\n                    if (tileManager) {\r\n                        tileManager.initializeTile(type, num, i + 1); // 初始化麻将牌，传递花色、编号、序列号\r\n                    } else {\r\n                        log(`TileManager component not found on tile prefab!`);\r\n                    }\r\n\r\n                    this.totalTiles.push(tile); // 将该牌加入牌堆数组\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // 抽取一张牌\r\n    public drawTile() {\r\n        if (this.totalTiles.length > 0) {\r\n            const randomIndex = Math.floor(Math.random() * this.totalTiles.length);\r\n            const tile = this.totalTiles[randomIndex];\r\n            this.totalTiles.splice(randomIndex, 1); // 从牌堆中移除抽取的牌\r\n            this.createDrawnTile(tile); // 将抽取的牌显示在抽牌区\r\n        }\r\n    }\r\n\r\n    // 创建抽取的麻将牌并放到抽牌区\r\n    private createDrawnTile(tile: Node) {\r\n        this.drawnTile = tile;\r\n        tile.setParent(this.drawArea); // 将牌放到抽牌区\r\n        tile.position = new Vec3(0, 0, 0); // 设置位置，调整为合适的位置\r\n        this.addDragFeature(tile); // 给麻将牌添加拖拽功能\r\n    }\r\n\r\n    // 给麻将牌添加拖拽功能\r\n    private addDragFeature(tile: Node) {\r\n        tile.on(Node.EventType.TOUCH_MOVE, this.onTileDrag, this);\r\n        tile.on(Node.EventType.TOUCH_END, this.onTileDrop, this);\r\n        tile.on(Node.EventType.TOUCH_CANCEL, this.onTileDrop, this);\r\n    }\r\n\r\n    // 拖拽麻将牌\r\n    private onTileDrag(event) {\r\n        const delta = event.getDelta();\r\n        this.drawnTile.setPosition(this.drawnTile.position.add(delta));\r\n    }\r\n\r\n    // 放置麻将牌（检查是否放入格子或丢弃区）\r\n    private onTileDrop(event) {\r\n        const gridManager = this.node.getComponent('GridManager'); // 获取GridManager组件\r\n        const grid = gridManager.getGridAtPoint(this.drawnTile.position);\r\n        \r\n        if (grid) {\r\n            // 如果放入格子，则将牌放到格子上\r\n            this.drawnTile.setPosition(grid.position);\r\n        } else {\r\n            // 如果没有放入格子，则返回抽牌区或丢弃牌\r\n            this.drawnTile.setPosition(this.drawArea.position);\r\n        }\r\n    }\r\n}\r\n"]}