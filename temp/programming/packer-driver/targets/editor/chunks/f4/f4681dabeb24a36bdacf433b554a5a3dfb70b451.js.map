{"version":3,"sources":["file:///C:/Users/Administrator/MiaoMiaoMaJiang/assets/scripts/MahjongManager.ts"],"names":["_decorator","Component","Node","Mahjong","ccclass","property","GameState","TileState","MahjongManager","type","currentSelected","start","setCurState","GS_INIT","update","deltaTime","init","startMenu","active","playingState","value","GS_PLAYING","GS_END","onStartButtonClicked","onLoad","instance","trySelect","newNode","mahjong","getComponent","cancelSelect","cancelCurrent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,QAAAA,U;AAAYC,MAAAA,S,QAAAA,S;AAAWC,MAAAA,I,QAAAA,I;;;AACvBC,MAAAA,O,iBAAAA,O;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;;AAGzBM,MAAAA,S,0BAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;eAAAA,S;QAAAA,S;;AAIJ;;AAEIC,MAAAA,S,0BAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;eAAAA,S;QAAAA,S;;gCAMQC,c,WADZJ,OAAO,CAAC,gBAAD,C,UAUHC,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEP;AAAR,OAAD,C,UAERG,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEP;AAAR,OAAD,C,UAERG,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEP;AAAR,OAAD,C,UAGRG,QAAQ,CAACH,IAAD,C,sCAjBb,MACaM,cADb,SACoCP,SADpC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAsDlCS,eAtDkC,GAsDH,IAtDG;AAAA;;AAC1CC,QAAAA,KAAK,GAAG;AACJ,eAAKC,WAAL,CAAiBN,SAAS,CAACO,OAA3B;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAgBDC,QAAAA,IAAI,GAAE;AACF,cAAG,KAAKC,SAAR,EAAkB;AACd,iBAAKA,SAAL,CAAeC,MAAf,GAAwB,IAAxB;AACH;;AACD,cAAG,KAAKC,YAAR,EAAqB;AACjB,iBAAKA,YAAL,CAAkBD,MAAlB,GAA2B,KAA3B;AACH;AACJ;;AAEDN,QAAAA,WAAW,CAACQ,KAAD,EAAmB;AAC1B,kBAAQA,KAAR;AACI,iBAAKd,SAAS,CAACO,OAAf;AACI,mBAAKG,IAAL;AACA;;AACJ,iBAAKV,SAAS,CAACe,UAAf;AACI,kBAAI,KAAKJ,SAAT,EAAoB;AAChB,qBAAKA,SAAL,CAAeC,MAAf,GAAwB,KAAxB;AACH;;AACD,kBAAG,KAAKC,YAAR,EAAqB;AACjB,qBAAKA,YAAL,CAAkBD,MAAlB,GAA2B,IAA3B;AACH;;AACD;;AACJ,iBAAKZ,SAAS,CAACgB,MAAf;AACI;AAbR;AAeH;;AACDC,QAAAA,oBAAoB,GAAG;AACnB,eAAKX,WAAL,CAAiBN,SAAS,CAACe,UAA3B;AACH;;AAKDG,QAAAA,MAAM,GAAG;AACLhB,UAAAA,cAAc,CAACiB,QAAf,GAA0B,IAA1B;AACH;;AAEMC,QAAAA,SAAS,CAACC,OAAD,EAAgB;AAC5B,cAAI,KAAKjB,eAAL,KAAyBiB,OAA7B,EAAsC,OADV,CAG5B;;AACA,cAAI,KAAKjB,eAAT,EAA0B;AACtB,kBAAMkB,OAAO,GAAG,KAAKlB,eAAL,CAAqBmB,YAArB;AAAA;AAAA,mCAAhB;AACAD,YAAAA,OAAO,QAAP,IAAAA,OAAO,CAAEE,YAAT;AACH,WAP2B,CAS5B;;;AACA,eAAKpB,eAAL,GAAuBiB,OAAvB;AACH;;AAEMI,QAAAA,aAAa,GAAG;AACnB,eAAKrB,eAAL,GAAuB,IAAvB;AACH;;AA3EyC,O,UAqD5Be,Q;;;;;iBA3CkB,I;;;;;;;iBAEG,I;;;;;;;iBAEH,I;;;;;;;iBAGb,I;;uFAElBpB,Q;;;;;iBACqB,E","sourcesContent":["import { _decorator, Component, Node, Prefab, Vec3 } from 'cc';\r\nimport { Mahjong } from './Mahjong';\r\nconst { ccclass, property } = _decorator;\r\nimport * as cc from \"cc\"\r\n\r\nenum GameState {\r\n    GS_INIT,\r\n    GS_PLAYING,\r\n    GS_END,\r\n};\r\n\r\nenum TileState{\r\n    MJ_SELECTED,\r\n    MJ_UNSELECTED,\r\n}\r\n\r\n@ccclass('MahjongManager')\r\nexport class MahjongManager extends Component {\r\n    start() {\r\n        this.setCurState(GameState.GS_INIT);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n    @property({ type: Node })\r\n    public startMenu: Node | null = null;\r\n    @property({ type: Node })\r\n    public playingState: Node | null = null;\r\n    @property({ type: Node })\r\n    public tileState: Node | null = null;\r\n\r\n    @property(Node)  // 通过属性检查器绑定目标 Sprite\r\n    targetTile: Node = null!;\r\n\r\n    @property\r\n    moveDistance:number = 50;\r\n    \r\n\r\n    init(){\r\n        if(this.startMenu){\r\n            this.startMenu.active = true;\r\n        }\r\n        if(this.playingState){\r\n            this.playingState.active = false;\r\n        }\r\n    }\r\n\r\n    setCurState(value: GameState) {\r\n        switch (value) {\r\n            case GameState.GS_INIT:\r\n                this.init();\r\n                break;\r\n            case GameState.GS_PLAYING:\r\n                if (this.startMenu) {\r\n                    this.startMenu.active = false;\r\n                }\r\n                if(this.playingState){\r\n                    this.playingState.active = true;\r\n                }\r\n                break;\r\n            case GameState.GS_END:\r\n                break;\r\n        }\r\n    }\r\n    onStartButtonClicked() {\r\n        this.setCurState(GameState.GS_PLAYING);\r\n    }\r\n   \r\n    public static instance: MahjongManager;\r\n    private currentSelected: Node | null = null;\r\n\r\n    onLoad() {\r\n        MahjongManager.instance = this;\r\n    }\r\n\r\n    public trySelect(newNode: Node) {\r\n        if (this.currentSelected === newNode) return;\r\n        \r\n        // 取消之前选中的麻将\r\n        if (this.currentSelected) {\r\n            const mahjong = this.currentSelected.getComponent(Mahjong);\r\n            mahjong?.cancelSelect()\r\n        }\r\n\r\n        // 选中新的麻将\r\n        this.currentSelected = newNode;\r\n    }\r\n\r\n    public cancelCurrent() {\r\n        this.currentSelected = null;\r\n    }\r\n\r\n}"]}