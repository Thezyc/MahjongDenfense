{"version":3,"sources":["file:///C:/Users/Administrator/MiaoMiaoMaJiang/assets/Scripts/MahjongGame.ts"],"names":["ccclass","property","cc","_decorator","MjType","GameManager","Node","Prefab","Component","allTiles","playerHand","tilePool","discarded","onLoad","startButton","on","EventType","TOUCH_END","initGame","generateTiles","shuffleTiles","dealInitialHand","drawNextTile","type","num","i","push","length","j","Math","floor","random","splice","updateHandDisplay","log","shift","checkWinCondition","discardTile","index","handArea","removeAllChildren","sort","a","b","forEach","tile","tileNode","instantiate","tilePrefab","getComponentInChildren","Label","string","getTileName","addChild","isWin","hand","sorted","temp","checkGroups","slice","first","next1","next2","includes","indexOf"],"mappings":"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","sourcesContent":["// GameManager.ts\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nenum MjType {\r\n    WAN = 0,\r\n    TIAO = 1,\r\n    TONG = 2\r\n}\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n    @property(cc.Node)\r\n    startButton: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    handArea: cc.Node = null;\r\n\r\n    @property(cc.Prefab)\r\n    tilePrefab: cc.Prefab = null;\r\n\r\n    private allTiles: number[] = [];\r\n    private playerHand: number[] = [];\r\n    private tilePool: number[] = [];\r\n    private discarded: number[] = [];\r\n\r\n    onLoad() {\r\n        this.startButton.on(cc.Node.EventType.TOUCH_END, this.initGame, this);\r\n    }\r\n\r\n    // 初始化游戏\r\n    initGame() {\r\n        this.generateTiles();\r\n        this.shuffleTiles();\r\n        this.dealInitialHand();\r\n        this.drawNextTile();\r\n    }\r\n\r\n    // 生成所有麻将牌\r\n    private generateTiles() {\r\n        this.allTiles = [];\r\n        // 生成万（1-9）、条（11-19）、筒（21-29）\r\n        for (let type = 0; type < 3; type++) {\r\n            for (let num = 1; num <= 9; num++) {\r\n                for (let i = 0; i < 4; i++) {\r\n                    this.allTiles.push(type * 10 + num);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 洗牌\r\n    private shuffleTiles() {\r\n        for (let i = this.allTiles.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [this.allTiles[i], this.allTiles[j]] = [this.allTiles[j], this.allTiles[i]];\r\n        }\r\n        this.tilePool = [...this.allTiles];\r\n    }\r\n\r\n    // 初始发牌\r\n    private dealInitialHand() {\r\n        this.playerHand = this.tilePool.splice(0, 14);\r\n        this.updateHandDisplay();\r\n    }\r\n\r\n    // 摸牌\r\n    private drawNextTile() {\r\n        if (this.tilePool.length === 0) {\r\n            cc.log(\"牌堆已空\");\r\n            return;\r\n        }\r\n        this.playerHand.push(this.tilePool.shift());\r\n        this.updateHandDisplay();\r\n        this.checkWinCondition();\r\n    }\r\n\r\n    // 打牌\r\n    private discardTile(index: number) {\r\n        const discarded = this.playerHand.splice(index, 1)[0];\r\n        this.discarded.push(discarded);\r\n        this.drawNextTile();\r\n    }\r\n\r\n    // 更新手牌显示\r\n    private updateHandDisplay() {\r\n        this.handArea.removeAllChildren();\r\n        this.playerHand.sort((a, b) => a - b).forEach((tile, index) => {\r\n            const tileNode = cc.instantiate(this.tilePrefab);\r\n            tileNode.getComponentInChildren(cc.Label).string = this.getTileName(tile);\r\n            tileNode.on(cc.Node.EventType.TOUCH_END, () => this.discardTile(index));\r\n            this.handArea.addChild(tileNode);\r\n        });\r\n    }\r\n\r\n    // 胡牌检测\r\n    private checkWinCondition() {\r\n        if (this.isWin(this.playerHand)) {\r\n            cc.log(\"胡牌啦！\");\r\n            this.tilePool = []; // 清空牌堆结束游戏\r\n        }\r\n    }\r\n\r\n    // 胡牌判断算法\r\n    private isWin(hand: number[]): boolean {\r\n        const sorted = [...hand].sort((a, b) => a - b);\r\n        \r\n        // 尝试所有可能的将牌组合\r\n        for (let i = 0; i < sorted.length - 1; i++) {\r\n            if (sorted[i] === sorted[i + 1]) {\r\n                const temp = [...sorted];\r\n                temp.splice(i, 2);\r\n                if (this.checkGroups(temp)) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // 检查是否可组成四个成牌\r\n    private checkGroups(hand: number[]): boolean {\r\n        if (hand.length === 0) return true;\r\n        \r\n        // 检查刻子\r\n        if (hand.length >= 3 && hand[0] === hand[1] && hand[1] === hand[2]) {\r\n            if (this.checkGroups(hand.slice(3))) return true;\r\n        }\r\n\r\n        // 检查顺子\r\n        const first = hand[0];\r\n        const next1 = first + 1;\r\n        const next2 = first + 2;\r\n        \r\n        if (first % 10 <= 7 && \r\n            hand.includes(next1) && \r\n            hand.includes(next2) &&\r\n            Math.floor(first / 10) === Math.floor(next1 / 10) &&\r\n            Math.floor(first / 10) === Math.floor(next2 / 10)) {\r\n            \r\n            const temp = [...hand];\r\n            temp.splice(temp.indexOf(next2), 1);\r\n            temp.splice(temp.indexOf(next1), 1);\r\n            temp.shift();\r\n            \r\n            if (this.checkGroups(temp)) return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n\r\n    // 获取牌显示名称\r\n    private getTileName(tile: number): string {\r\n        const type = Math.floor(tile / 10);\r\n        const num = tile % 10;\r\n        return `${[\"万\", \"条\", \"筒\"][type]}${num}`;\r\n    }\r\n}"]}